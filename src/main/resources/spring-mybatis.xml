<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--只掃描業務邏輯,跟資料庫行為有關的-->
    <context:component-scan base-package="job.admin">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <!--資料庫來源-->
    <bean id="sqlite" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.driverClass}" />
        <property name="jdbcUrl" value="${db.jdbcUrl}" />
        <property name="maxPoolSize" value="${db.maxPoolSize}" />
        <property name="minPoolSize" value="${db.minPoolSize}" />
        <property name="maxStatements" value="${db.maxStatements}" />
        <property name="testConnectionOnCheckout" value="${db.testConnectionOnCheckout}" />
    </bean>

    <!--MYBATIS配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="sqlite" />
        <!-- 指定MYBATIS設定檔當作全局配置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 指定MAPPING XML檔案位置 -->
        <property name="mapperLocations" value="classpath:job/admin/mapping/*.xml"/>
        <!--PAGEHELPER分頁插件5的設定方式-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=sqlite
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 掃描MAPPER對應的介面讓SPRING能夠@Autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="job.admin.dao" />
    </bean>

    <!-- SPRING TRANSACTION管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="sqlite" />
    </bean>

    <!-- 開啟對TRANSACTION註解功能 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--設定transaction進入點,哪些CLASS及METHOD需要使用transaction-->
    <aop:config>
        <!--
        * job.admin.service..*(..)
        說明job.admin.service下的方法都使用transaction
        *(..) 不管參數有幾個
        -->
        <aop:pointcut id="txPoint" expression="execution(* job.admin.service..*(..))"/>
        <aop:advisor advice-ref="txAdvic" pointcut-ref="txPoint"/>
    </aop:config>
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
    <tx:advice id="txAdvic" transaction-manager="transactionManager">
        <tx:attributes>
            <!--所有方法都是transaction的方法-->
            <tx:method name="*"/>
            <!--只要是query&get開頭的都是查詢,所以讓他唯讀-->
            <tx:method name="query*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>